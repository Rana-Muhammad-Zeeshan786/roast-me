"use client";

import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { TwitterShareButton, FacebookShareButton, WhatsappShareButton, LinkedinShareButton } from "next-share";
import { Twitter, Facebook, Linkedin, Share2 } from "lucide-react";
import { toast } from "sonner";
import { useState, useEffect } from "react";

type RoastDisplayProps = {
  roast: string;
  modelProvider?: string;
};

export function RoastDisplay({ roast, modelProvider = "deepseek" }: RoastDisplayProps) {
  const [shareUrl, setShareUrl] = useState<string>("");
  const [shareText, setShareText] = useState<string>("");
  const [clipboardUrl, setClipboardUrl] = useState<string>("");
  
  // Move window-dependent code to useEffect to avoid hydration mismatch
  useEffect(() => {
    // Make sure we're using the fully qualified domain name
    const baseUrl = window.location.origin;
    
    // Encode the roast for URL safety and truncate if too long
    const encodedRoast = encodeURIComponent(roast).substring(0, 1500);
    
    // Primary method: Use hash fragment for sharing
    const hashUrl = `${baseUrl}/share#${encodedRoast}`;
    
    // Fallback method: Use direct share URL for platforms that don't support hash fragments
    const directUrl = `${baseUrl}/direct-share/${encodedRoast}`;
    
    // We'll use directUrl for social media platforms as they handle it better
    setShareUrl(directUrl);
    
    // Create a share text that doesn't duplicate the roast (since it's in the URL)
    const title = "Check out this hilarious AI roast I received!";
    const text = `${title}\n\nClick the link to see my personalized AI roast:`;
    setShareText(text);
    
    // Additional state - store hash URL for clipboard copying
    setClipboardUrl(hashUrl);
  }, [roast]);

  const copyToClipboard = () => {
    navigator.clipboard.writeText(roast);
    toast.success("Roast copied to clipboard!");
  };

  const copyShareLink = () => {
    // For direct copying, use the hash URL which works better in direct messages
    const fullShareText = `${shareText}\n\n${clipboardUrl}`;
    navigator.clipboard.writeText(fullShareText);
    toast.success("Share text and link copied to clipboard!");
  };

  if (!roast) return null;

  const modelName = modelProvider === "openai" ? "OpenAI GPT" : "DeepSeek Chat";

  return (
    <Card className="w-full mt-8">
      <CardHeader>
        <div className="flex items-center justify-between">
          <div>
            <CardTitle>Your Personalized Roast</CardTitle>
            <CardDescription>Generated by {modelName}</CardDescription>
          </div>
          <Button variant="ghost" size="icon" onClick={copyToClipboard}>
            <Share2 className="h-4 w-4" />
          </Button>
        </div>
      </CardHeader>
      <CardContent>
        <p className="text-lg italic">{roast}</p>

        <div className="mt-6">
          <div className="flex justify-between items-center mb-3">
            <p className="text-sm text-muted-foreground">Share this roast:</p>
            <Button variant="outline" size="sm" onClick={copyShareLink} disabled={!shareUrl}>
              Copy Share Text & Link
            </Button>
          </div>
          {shareUrl && (
            <div className="flex gap-2">
              <TwitterShareButton url={shareUrl} title={shareText}>
                <div className="inline-flex h-9 w-9 items-center justify-center rounded-md border border-input bg-background text-sm font-medium ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2">
                  <Twitter className="h-4 w-4" />
                </div>
              </TwitterShareButton>

              <FacebookShareButton url={shareUrl} quote={shareText}>
                <div className="inline-flex h-9 w-9 items-center justify-center rounded-md border border-input bg-background text-sm font-medium ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2">
                  <Facebook className="h-4 w-4" />
                </div>
              </FacebookShareButton>

              <LinkedinShareButton url={shareUrl} title="Check out this hilarious AI roast I received!" summary={roast.substring(0, 250)}>
                <div className="inline-flex h-9 w-9 items-center justify-center rounded-md border border-input bg-background text-sm font-medium ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2">
                  <Linkedin className="h-4 w-4" />
                </div>
              </LinkedinShareButton>

              <WhatsappShareButton url={shareUrl} title={shareText}>
                <div className="inline-flex h-9 w-9 items-center justify-center rounded-md border border-input bg-background text-sm font-medium ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2">
                  <svg
                    className="h-4 w-4"
                    role="img"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill="currentColor"
                      d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413Z"
                    />
                  </svg>
                </div>
              </WhatsappShareButton>
            </div>
          )}
        </div>
      </CardContent>
    </Card>
  );
} 